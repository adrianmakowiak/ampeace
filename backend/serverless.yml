service: ampeace-backend

provider:
  name: aws
  runtime: python3.8
  stage: dev
  region: eu-central-1
  memorySize: 128
  timeout: 6
  apiGateway:
    binaryMediaTypes:
      - '*/*'

plugins:
  - serverless-iam-roles-per-function
  - serverless-cloudformation-sub-variables

functions:
  soundGet:
    handler: src/lambdas/sound.get
    iamRoleStatements:
      - Effect: "Allow"        
        Action:
          - s3:GetObject        
        Resource: 
          Fn::Join: 
          - ''
          - - 'arn:aws:s3:::'
            - Ref: soundBucket
            - '/*'
    events:
      - http:
          path: sounds/{id}
          method: get
  soundPost:
    handler: src/lambdas/sound.post
    iamRoleStatements:
      - Effect: "Allow"        
        Action:
          - s3:PutObject        
        Resource: 
          - Fn::Join: 
            - ''
            - - 'arn:aws:s3:::'
              - Ref: soundBucket
              - '/*'     
          - Fn::Join: 
            - ''
            - - 'arn:aws:s3:::'
              - Ref: soundBucket   
      - Effect: "Allow"
        Action:
          - dynamodb:PutItem        
        Resource: !GetAtt soundTable.Arn  
    events:
      - http:
          path: sounds
          method: post
          request:
            parameters:
              querystrings:
                name: true

resources:
  Resources:
    soundBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ampeace-sounds
    soundTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.stage}-ampeace-sound-table
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
        BillingMode: PAY_PER_REQUEST